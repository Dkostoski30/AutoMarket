@model AutoMarket.Models.Blog

@{
    ViewBag.Title = "Create a Blog";
}

<style>
    body {
        font-family: 'Roboto', sans-serif;
        background-color: #121212; /* Very Dark Grey Background */
        color: #E0E0E0; /* Light Grey Text */
        margin: 0;
    }

    /* Navbar Styles */
    .navbar {
        background: linear-gradient(90deg, #1F2C38 0%, #2C3E50 100%); /* Dark Blue Gradient */
        padding: 15px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    }

    .navbar-brand {
        font-weight: bold;
        font-size: 1.5em;
        color: #E0E0E0 !important; /* Light Grey */
        display: flex;
        align-items: center;
    }

        .navbar-brand span {
            color: #1F2C38; /* Dark Blue */
            background-color: #E0E0E0; /* Light Grey */
            padding: 0 8px;
            border-radius: 5px;
        }

    .nav-link {
        color: #E0E0E0 !important;
        margin: 0 10px;
        transition: color 0.3s ease;
    }

        .nav-link:hover {
            color: #18BC9C !important; /* Emerald Green on Hover */
        }

    .navbar-toggler {
        border: none;
        color: #E0E0E0;
    }

    /* Hero Section */
    .hero {
        height: 60vh;
        display: flex;
        justify-content: center;
        align-items: center;
        color: #E0E0E0;
        text-align: center;
        padding: 0 20px;
        background: linear-gradient(90deg, #1F2C38 0%, #2C3E50 100%); /* Dark Blue Gradient */
    }

        .hero h1 {
            font-size: 3em;
            font-weight: bold;
            margin-bottom: 20px;
        }

        .hero .btn {
            font-size: 1.2em;
            padding: 10px 20px;
            border-radius: 30px;
            background: #18BC9C; /* Emerald Green */
            color: #ffffff;
            border: none;
            transition: background 0.3s ease;
        }

            .hero .btn:hover {
                background: #16A085; /* Darker Emerald Green */
            }

    /* Body Content */
    .body-content {
        padding: 20px;
        background-color: #1F2C38; /* Dark Blue */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        border-radius: 8px;
        margin-top: -50px;
        position: relative;
        z-index: 10;
    }

    /* Form */
    #BlogContainer .form {
        max-width: 600px;
        margin: 20px auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background-color: #1F2C38; /* Dark Blue */
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    }

    #BlogContainer .form-control {
        width: 100%;
        margin-bottom: 15px;
        padding: 10px;
        border: 1px solid #37474F; /* Dark Grey Border */
        background-color: #263238; /* Darker Grey Background */
        color: #E0E0E0; /* Light Grey Text */
        border-radius: 8px;
    }

    .form-control:focus {
        border-color: #16A085; /* Darker Emerald Green Border */
    }

    .btn {
        background-color: #18BC9C; /* Emerald Green */
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        cursor: pointer;
        transition: background 0.3s ease;
        margin-top: 10px;
    }

        .btn:hover {
            background-color: #16A085; /* Darker Emerald Green */
        }

    .btn-primary {
        background-color: #18BC9C; /* Emerald Green */
    }

    .file-drop-area {
        position: relative;
        display: flex;
        align-items: center;
        width: 100%;
        padding: 25px;
        border: 2px dashed #37474F; /* Dark Grey Border */
        border-radius: 8px;
        background-color: #263238; /* Darker Grey Background */
        transition: 0.2s;
        margin-bottom: 15px;
    }

    .fake-btn {
        flex-shrink: 0;
        background-color: #18BC9C;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 3px;
        cursor: pointer;
        margin-right: 10px;
    }

    .file-msg {
        font-size: 14px;
        color: #aaa;
    }

    .file-input {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        cursor: pointer;
    }

    .file-drop-area.is-active {
        background-color: #f0f0f0;
        border-color: #007bff;
    }

    @@media (max-width: 768px) {
        .form {
            padding: 15px;
        }

        .form-control {
            padding: 8px;
        }

        .file-drop-area {
            padding: 20px;
        }

        .fake-btn {
            padding: 8px 16px;
        }
    }
    <style>
    /* Update existing styles */
    #BlogContainer .form {
        max-width: 600px;
        margin: 20px auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background-color: #1F2C38; /* Dark Blue */
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        transition: all 0.3s ease;
    }

    #BlogContainer .form-control {
        width: 100%;
        margin-bottom: 15px;
        padding: 10px;
        border: 1px solid #37474F; /* Dark Grey Border */
        background-color: #263238; /* Darker Grey Background */
        color: #E0E0E0; /* Light Grey Text */
        border-radius: 8px;
    }

    #BlogContainer .form-control:focus {
        border-color: #16A085; /* Darker Emerald Green Border */
        background-color: #2E3B45; /* Slightly Lighter Grey Background */
    }

    #BlogContainer .form-group textarea.form-control {
        height: 150px; /* Increase the height for text areas */
        resize: vertical; /* Allow vertical resize */
    }

    #BlogContainer .btn {
        background-color: #18BC9C; /* Emerald Green */
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        cursor: pointer;
        transition: background 0.3s ease;
        margin-top: 10px;
    }

    #BlogContainer .btn:hover {
        background-color: #16A085; /* Darker Emerald Green */
    }

    #BlogContainer .file-drop-area {
        position: relative;
        display: flex;
        align-items: center;
        width: 100%;
        padding: 25px;
        border: 2px dashed #37474F; /* Dark Grey Border */
        border-radius: 8px;
        background-color: #263238; /* Darker Grey Background */
        transition: 0.2s;
        margin-bottom: 15px;
    }

    #BlogContainer .file-drop-area.is-active {
        background-color: #2E3B45; /* Slightly Lighter Grey Background */
    }

    /* Add responsiveness */
    @@media (max-width: 768px) {
        #BlogContainer .form {
            padding: 20px;
        }

        #BlogContainer .form-control {
            padding: 8px;
        }

        #BlogContainer .file-drop-area {
            padding: 20px;
        }

        #BlogContainer .btn {
            padding: 8px 16px;
        }
    }
</style>

</style>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <h4 class="my-4">Create a Blog</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="card mb-4">
            <div class="card-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control", rows = 5 })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.Label("Upload Image", htmlAttributes: new { @class = "control-label" })
                    <div class="file-drop-area">
                        <span class="fake-btn">Choose file</span>
                        <span class="file-msg">or drag and drop file here</span>
                        <input type="file" name="upload" class="file-input" />
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12 text-center">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="mt-3">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
</div>

<script>
    document.querySelectorAll('.file-drop-area').forEach(dropArea => {
        const fileInput = dropArea.querySelector('.file-input');
        const fakeBtn = dropArea.querySelector('.fake-btn');
        const fileMsg = dropArea.querySelector('.file-msg');

        dropArea.addEventListener('dragover', (event) => {
            event.preventDefault();
            dropArea.classList.add('is-active');
        });

        dropArea.addEventListener('dragleave', () => {
            dropArea.classList.remove('is-active');
        });

        dropArea.addEventListener('drop', (event) => {
            event.preventDefault();
            dropArea.classList.remove('is-active');
            const files = event.dataTransfer.files;
            if (files.length) {
                fileInput.files = files;
                updateFileMessage(fileInput, fileMsg);
            }
        });

        fakeBtn.addEventListener('click', () => {
            fileInput.click();
        });

        fileInput.addEventListener('change', () => {
            updateFileMessage(fileInput, fileMsg);
        });

        function updateFileMessage(input, messageElement) {
            const fileCount = input.files.length;
            if (fileCount === 1) {
                messageElement.textContent = input.files[0].name;
            } else {
                messageElement.textContent = `${fileCount} files selected`;
            }
        }
    });
</script>
